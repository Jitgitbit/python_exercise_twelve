import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

print("Matplotlib recap")
print("==================================")
print('First we need a graph (--> Jupyter):')
x = np.linspace(0,10,20)
y = x * x
z = x + y
myGraph = plt.plot(x,y)
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('justSomeTitle')
print(myGraph)
print('- - - - - - - - - - - - - - - - -')
print('SubPlots: ')
plt.subplot(3,2,1)
plt.plot(x,x)
plt.subplot(3,2,2)
plt.plot(x,y)
plt.subplot(3,2,3)
plt.plot(x,z)
plt.subplot(3,2,4)
plt.plot(y,z)
plt.subplot(3,2,5)
plt.subplot(3,2,6)
plt.plot(x,x)
plt.xlabel('x-axis')
plt.ylabel('y-axis')
plt.tight_layout()
print('- - - - - - - - - - - - - - - - -')
print('Types of plots: ')
plt.subplot(2,2,1)
plt.plot(x,y)
plt.subplot(2,2,2)
plt.hist(x,y)
plt.subplot(2,2,3)
plt.bar(x,y)
plt.subplot(2,2,4)
plt.fill(x,y)
plt.tight_layout()
print('- - - - - - - - - - - - - - - - -')
print('even a 360 graph:')
print()
plt.polar(x,y)
print()
print('All clear!')
print('- - - - - - - - - - - - - - - - -')
print('Legends:')
plt.plot(x,y,label = 'legend example')
plt.legend(loc = 1)
print('- - - - - - - - - - - - - - - - -')
print('Object oriented plots (for controlling the axes):')
print()
noneOOPlot = plt.plot(x,y)
print(noneOOPlot)
fig = plt.figure()
axesSet1 = fig.add_axes([0.1,0.1,0.8,0.8])
oOPlot = axesSet1.plot(x,y)
print(oOPlot)
print('- - - - - - - - - - - - - - - - -')
print('Object oriented plots (multiple plots):')
print()
fig = plt.figure()
x1 = fig.add_axes([0.1,0.1,0.7,0.7])
x2 = fig.add_axes([0.8,0.8,0.3,0.3])
oOPlot1 = x1.plot(x,y)
oOPlot2 = x2.plot(y,x)
print(oOPlot1)
print(oOPlot2)
print('- - - - - - - - - - - - - - - - -')
print('Subplots using Object Oriented plots:')
print()
fig = plt.figure()
fig , axesSet2 = plt.subplots(1,2)
graph1 = axesSet2[0].plot(x,y,x,x)
graph2 = axesSet2[1].plot(y,x)
plt.tight_layout()
print(graph1)
print(graph2)
print('- - - - - - - - - - - - - - - - -')
print('Figure Size:')
print()
basicGraph = plt.plot(x,y)
print(basicGraph)
fig = plt.figure(figsize= (2,3))
axes = fig.add_axes([0,0,1,1])
graph3 = axes.plot(x,y)
print(graph3)
print()
fig , axesSet3 = plt.subplots(2,1, figsize = (5,5))
graph4 = axesSet3[0].plot(x,y)
graph5 = axesSet3[1].plot(y,x)
print(graph4)
print(graph5)
print('- - - - - - - - - - - - - - - - -')
print('Setting labels with object oriented technique:')
print()
fig = plt.figure()
axesSet4 = fig.add_axes([0,0,1,1])
axesSet4.set_xlabel('x-axis')
axesSet4.set_ylabel('y-axis')
axesSet4.set_title('the graph')
labelGraph = axesSet4.plot(x,y)
print(labelGraph)
print('- - - - - - - - - - - - - - - - -')
print('Styling plots:')
print()
fig = plt.figure()
axesSet5 = fig.add_axes([0,0,1,1])
styledGraph = axesSet5.plot(x,y, color= 'blue', linestyle= ':', linewidth= 20)
print(styledGraph)
print("----------------------------------")